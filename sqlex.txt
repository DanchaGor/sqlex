47 ==============================
WITH SHIP AS  
  (SELECT C.COUNTRY, S.NAME FROM CLASSES C JOIN SHIPS S ON C.CLASS=S.CLASS
  UNION
  SELECT C.COUNTRY, O.SHIP FROM OUTCOMES O JOIN CLASSES C ON C.CLASS=O.SHIP),
COUNTRIES AS (SELECT COUNTRY, NAME, CASE WHEN RESULT='SUNK' THEN 1
      ELSE 0
      END AS SUNK
      FROM SHIP LEFT JOIN OUTCOMES O ON O.SHIP=SHIP.NAME)

SELECT COUNTRY FROM COUNTRIES 
GROUP BY COUNTRY
HAVING COUNT(DISTINCT NAME)=SUM(SUNK)

48 ==============================
SELECT DISTINCT C.CLASS FROM OUTCOMES O
  LEFT JOIN SHIPS S ON O.SHIP = S.NAME
  JOIN CLASSES C ON (O.SHIP = C.CLASS OR S.CLASS = C.CLASS)
WHERE RESULT = 'SUNK'

49 ==============================
SELECT S.NAME
FROM CLASSES C JOIN SHIPS S ON C.CLASS = S.CLASS
WHERE C.BORE = '16.0'
UNION
SELECT O.SHIP
FROM OUTCOMES O JOIN
CLASSES C ON C.CLASS = O.SHIP
WHERE C.BORE = '16.0'

50 ==============================
SELECT DISTINCT O.BATTLE
FROM SHIPS S JOIN OUTCOMES O ON S.NAME = O.SHIP
WHERE S.CLASS='Kongo'

51 ==============================
WITH OUTSHIP AS
(SELECT NAME, CLASS
 FROM SHIPS
 UNION
 SELECT SHIP NAME, SHIP CLASS
 FROM OUTCOMES)
SELECT S.NAME
FROM OUTSHIP S, CLASSES C
WHERE C.CLASS = S.CLASS AND
      C.NUMGUNS >= ALL(SELECT C1.NUMGUNS
                       FROM CLASSES C1
                       WHERE C1.CLASS IN (SELECT OUTSHIP.CLASS 
                                          FROM OUTSHIP) AND
                                          C.DISPLACEMENT = C1.DISPLACEMENT)

52 ==============================
SELECT DISTINCT S.NAME FROM
SHIPS S JOIN CLASSES C ON S.CLASS = C.CLASS
WHERE C.COUNTRY = 'Japan'
AND (C.NUMGUNS >= 9 OR C.NUMGUNS IS NULL)
AND (C.BORE < 19 OR C.BORE IS NULL)
AND (C.DISPLACEMENT <=65000 OR C.DISPLACEMENT IS NULL)
AND C.TYPE = 'bb'

53 ==============================
SELECT CAST(AVG(NUMGUNS*1.0) AS NUMERIC(6,2)) AS AVG_NUMGUNS
FROM CLASSES
WHERE TYPE = 'bb'


54 ==============================
SELECT CAST(AVG(NUMGUNS*1.0) AS NUMERIC(6,2)) AS AVG_NUMGUNS
FROM ( 
 SELECT NAME, CLASS
 FROM SHIPS
 UNION
 SELECT SHIP, SHIP FROM OUTCOMES) S
JOIN CLASSES C ON S.CLASS = C.CLASS
WHERE TYPE = 'bb'


55 ==============================
SELECT C.CLASS, MIN(S.LAUNCHED)
FROM SHIPS S FULL JOIN CLASSES C ON S.CLASS = C.CLASS
GROUP BY C.CLASS

56 ==============================
SELECT C.CLASS, COUNT(S.SHIP)
FROM CLASSES C LEFT JOIN
 (SELECT O.SHIP, S.CLASS
 FROM OUTCOMES O LEFT JOIN SHIPS S ON O.SHIP = S.NAME
 WHERE O.RESULT = 'sunk') S ON S.CLASS = C.CLASS OR C.CLASS = S.SHIP
GROUP BY c.class

58================================================
SELECT M maker, T type, CAST(100.0*perc/perc2 AS NUMERIC(5,2)) prc
FROM
 (SELECT M, T, SUM(percentt) perc FROM
  (SELECT DISTINCT MAKER M, 'PC' T, 0 as percentt FROM PRODUCT
  UNION ALL
  SELECT DISTINCT MAKER, 'Laptop', 0 FROM PRODUCT
  UNION ALL
  SELECT DISTINCT MAKER, 'Printer', 0 FROM PRODUCT
  UNION ALL
  SELECT MAKER, TYPE, COUNT(*) FROM PRODUCT
   GROUP BY MAKER, TYPE) AS type
  GROUP BY M, T) type1
JOIN (SELECT MAKER, COUNT(*) perc2 FROM PRODUCT GROUP BY MAKER) type2 ON M=MAKER


59================================================
SELECT P1, O1 - (CASE
WHEN O2 is null THEN 0
ELSE O2 END)
FROM
 (SELECT POINT P1, SUM(INC) O1 FROM INCOME_O
 GROUP BY POINT) AS S1
 LEFT JOIN
 (SELECT POINT P2, SUM(OUT) O2 FROM OUTCOME_O
 GROUP BY POINT) AS S2 
 ON P1=P2

60================================================
SELECT P1, O1 - (CASE
WHEN O2 is null THEN 0
ELSE O2 END)
FROM
 (SELECT POINT P1, SUM(INC) O1
  FROM INCOME_O
  WHERE DATE < '2001-04-15'
  GROUP BY POINT) AS S1
 LEFT JOIN
 (SELECT POINT P2, SUM(OUT) O2 
  FROM OUTCOME_O
  WHERE DATE < '2001-04-15'
  GROUP BY POINT) AS S2 
 ON P1=P2

61================================================
SELECT SUM(S) AS Remain FROM
 (SELECT POINT, SUM(INC) AS S FROM INCOME_O
  GROUP BY POINT
 UNION
 SELECT POINT, -SUM(OUT) AS S FROM OUTCOME_O
GROUP BY POINT) AS T


